---
import BaseHead from '../components/BaseHead.astro'
import Header from '../components/Header.astro'
import Footer from '../components/Footer.astro'
import { SITE_TITLE, SITE_DESCRIPTION } from '../consts'
import { ViewTransitions } from 'astro:transitions'
//import Blox from '../components/Blox.svelte'
import { Lang } from '../components/Lang.jsx'
import json from '../helpers/colous.json'

const { url, title, code, tag, colour } = Astro.props

// readme
const readme = await Astro.glob('../../public/data/samifouad.*.readme.md')
const projects = readme.filter((id) => {
	const first = id.file.split('/public/data/samifouad.')
	const second = first[1].split('.readme.')
	if (title === second[0]) {
		return id
	}
})


const readme_html = projects[0].compiledContent()

// topics
const topics_raw = await Astro.glob('../../public/data/samifouad.*.topics.json')
const topics_filter = topics_raw.filter((id) => {
	if (title === id.default.repo.split('/')[1]) {
		return id.default.data
	}
})
const topics = topics_filter[0].default.data

// languages
const lang_raw = await Astro.glob('../../public/data/samifouad.*.lang.json')
const lang_filter = lang_raw.filter((id) => {
	if (title === id.default.repo.split('/')[1]) {
		return id.default.data
	}
})
const lang = lang_filter[0].default.data
---

<html lang="en">
	<head>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
		<ViewTransitions />
	</head>

	<body class="w-full bg-white">
		<Header transition:persist />
		<div class="float-left w-full h-fit">
			<div class="float-left w-[65%] pl-[5%]">
				<p class="text-sm">
					<Fragment set:html={readme_html}>
				</p>
			</div>
			<div class="h-fit float-left w-[30%] rounded-xl bg-gray-50 break-words pl-2 pr-2">
				<!-- <div class="w-[80px] h-32 float-left" transition:name={ url }>
					<div class="float-left w-fit"><Blox type="profile" tag={ code } name={ tag } footer={ title } colour={ colour }  /></div>
				</div> -->
				<strong>About</strong>
				<br>
				<span class="text-sm">insert description here</span>
				<br><br>
				<strong>Topics</strong>
				<br>
				{topics.map((item) => (
					<div class="inline-block rounded-xl p-2 mr-3 m-2 text-sm bg-gray-300">{item}</div>
				))}
				<br><br>
				<strong>Languages</strong>
				<br>
				<Lang languages={JSON.stringify(lang)} colours={json} />
			</div>
		</div>
		<Footer />
	</body>
</html>
